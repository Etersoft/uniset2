/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: UInterface.i

#define SWIGMODULE uniset_internal_api

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}


#include <string>


#include "goUInterface.h"
#include "UProxy.h"
#include "UTypes.h"

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_uniset_internal_api_576c1e11c33cb6aa(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;

  arg1 = *(void **)&_swig_go_0;

  Swig_free(arg1);

}


UTypes::ResultBool *_wrap_uniset_init_params_uniset_internal_api_576c1e11c33cb6aa(UTypes::Params *_swig_go_0, _gostring_ _swig_go_1) {
  UTypes::Params *arg1 = (UTypes::Params *) 0 ;
  std::string *arg2 = 0 ;
  UTypes::ResultBool result;
  UTypes::ResultBool *_swig_go_result;

  arg1 = *(UTypes::Params **)&_swig_go_0;

  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;


  result = goUInterface::uniset_init_params(arg1,(std::string const &)*arg2);
  *(UTypes::ResultBool **)&_swig_go_result = new UTypes::ResultBool(result);
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_uniset_init_uniset_internal_api_576c1e11c33cb6aa(intgo _swig_go_0, _gostring_* _swig_go_1, _gostring_ _swig_go_2) {
  int arg1 ;
  char **arg2 = (char **) 0 ;
  std::string *arg3 = 0 ;
  UTypes::ResultBool result;
  UTypes::ResultBool *_swig_go_result;

  arg1 = (int)_swig_go_0;
  arg2 = *(char ***)&_swig_go_1;

  std::string arg3_str(_swig_go_2.p, _swig_go_2.n);
  arg3 = &arg3_str;


  result = goUInterface::uniset_init(arg1,arg2,(std::string const &)*arg3);
  *(UTypes::ResultBool **)&_swig_go_result = new UTypes::ResultBool(result);
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_uniset_activate_objects_uniset_internal_api_576c1e11c33cb6aa() {
  UTypes::ResultBool result;
  UTypes::ResultBool *_swig_go_result;


  result = goUInterface::uniset_activate_objects();
  *(UTypes::ResultBool **)&_swig_go_result = new UTypes::ResultBool(result);
  return _swig_go_result;
}


UTypes::ResultValue *_wrap_getValue_uniset_internal_api_576c1e11c33cb6aa(long long _swig_go_0) {
  long arg1 ;
  UTypes::ResultValue result;
  UTypes::ResultValue *_swig_go_result;

  arg1 = (long)_swig_go_0;

  result = goUInterface::getValue(arg1);
  *(UTypes::ResultValue **)&_swig_go_result = new UTypes::ResultValue(result);
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_setValue__SWIG_0_uniset_internal_api_576c1e11c33cb6aa(long long _swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  long arg1 ;
  long arg2 ;
  long arg3 ;
  UTypes::ResultBool result;
  UTypes::ResultBool *_swig_go_result;

  arg1 = (long)_swig_go_0;
  arg2 = (long)_swig_go_1;
  arg3 = (long)_swig_go_2;

  result = goUInterface::setValue(arg1,arg2,arg3);
  *(UTypes::ResultBool **)&_swig_go_result = new UTypes::ResultBool(result);
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_setValue__SWIG_1_uniset_internal_api_576c1e11c33cb6aa(long long _swig_go_0, long long _swig_go_1) {
  long arg1 ;
  long arg2 ;
  UTypes::ResultBool result;
  UTypes::ResultBool *_swig_go_result;

  arg1 = (long)_swig_go_0;
  arg2 = (long)_swig_go_1;

  result = goUInterface::setValue(arg1,arg2);
  *(UTypes::ResultBool **)&_swig_go_result = new UTypes::ResultBool(result);
  return _swig_go_result;
}


long long _wrap_getSensorID_uniset_internal_api_576c1e11c33cb6aa(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  long result;
  long long _swig_go_result;


  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;


  result = (long)goUInterface::getSensorID((std::string const &)*arg1);
  _swig_go_result = result;
  return _swig_go_result;
}


long long _wrap_getObjectID_uniset_internal_api_576c1e11c33cb6aa(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  long result;
  long long _swig_go_result;


  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;


  result = (long)goUInterface::getObjectID((std::string const &)*arg1);
  _swig_go_result = result;
  return _swig_go_result;
}


_gostring_ _wrap_getShortName_uniset_internal_api_576c1e11c33cb6aa(long long _swig_go_0) {
  long arg1 ;
  std::string result;
  _gostring_ _swig_go_result;

  arg1 = (long)_swig_go_0;

  result = goUInterface::getShortName(arg1);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length());
  return _swig_go_result;
}


_gostring_ _wrap_getName_uniset_internal_api_576c1e11c33cb6aa(long long _swig_go_0) {
  long arg1 ;
  std::string result;
  _gostring_ _swig_go_result;

  arg1 = (long)_swig_go_0;

  result = goUInterface::getName(arg1);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length());
  return _swig_go_result;
}


_gostring_ _wrap_getTextName_uniset_internal_api_576c1e11c33cb6aa(long long _swig_go_0) {
  long arg1 ;
  std::string result;
  _gostring_ _swig_go_result;

  arg1 = (long)_swig_go_0;

  result = goUInterface::getTextName(arg1);
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length());
  return _swig_go_result;
}


_gostring_ _wrap_getConfFileName_uniset_internal_api_576c1e11c33cb6aa() {
  std::string result;
  _gostring_ _swig_go_result;


  result = goUInterface::getConfFileName();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length());
  return _swig_go_result;
}


long long _wrap_DefaultID_get_uniset_internal_api_576c1e11c33cb6aa() {
  long result;
  long long _swig_go_result;


  result = (long)(long)UTypes::DefaultID;
  _swig_go_result = result;
  return _swig_go_result;
}


long long _wrap_DefaultSupplerID_get_uniset_internal_api_576c1e11c33cb6aa() {
  long result;
  long long _swig_go_result;


  result = (long)(long)UTypes::DefaultSupplerID;
  _swig_go_result = result;
  return _swig_go_result;
}


intgo _wrap_Params_max_Params_uniset_internal_api_576c1e11c33cb6aa() {
  int result;
  intgo _swig_go_result;


  result = UTypes::Params::max;

  _swig_go_result = result;
  return _swig_go_result;
}


UTypes::Params *_wrap_new_Params_uniset_internal_api_576c1e11c33cb6aa() {
  UTypes::Params *result = 0 ;
  UTypes::Params *_swig_go_result;


  result = (UTypes::Params *)new UTypes::Params();
  *(UTypes::Params **)&_swig_go_result = (UTypes::Params *)result;
  return _swig_go_result;
}


bool _wrap_Params_add_uniset_internal_api_576c1e11c33cb6aa(UTypes::Params *_swig_go_0, _gostring_ _swig_go_1) {
  UTypes::Params *arg1 = (UTypes::Params *) 0 ;
  char *arg2 = (char *) 0 ;
  bool result;
  bool _swig_go_result;

  arg1 = *(UTypes::Params **)&_swig_go_0;
  arg2 = (char *)_swig_go_1.p;

  result = (bool)(arg1)->add(arg2);
  _swig_go_result = result;
  return _swig_go_result;
}


bool _wrap_Params_add_str_uniset_internal_api_576c1e11c33cb6aa(UTypes::Params *_swig_go_0, _gostring_ _swig_go_1) {
  UTypes::Params *arg1 = (UTypes::Params *) 0 ;
  std::string arg2 ;
  bool result;
  bool _swig_go_result;

  arg1 = *(UTypes::Params **)&_swig_go_0;
  (&arg2)->assign(_swig_go_1.p, _swig_go_1.n);

  result = (bool)(arg1)->add_str(arg2);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_Params_argc_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::Params *_swig_go_0, intgo _swig_go_1) {
  UTypes::Params *arg1 = (UTypes::Params *) 0 ;
  int arg2 ;

  arg1 = *(UTypes::Params **)&_swig_go_0;
  arg2 = (int)_swig_go_1;

  if (arg1) (arg1)->argc = arg2;

}


intgo _wrap_Params_argc_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::Params *_swig_go_0) {
  UTypes::Params *arg1 = (UTypes::Params *) 0 ;
  int result;
  intgo _swig_go_result;

  arg1 = *(UTypes::Params **)&_swig_go_0;

  result = (int) ((arg1)->argc);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_Params_argv_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::Params *_swig_go_0, _gostring_* _swig_go_1) {
  UTypes::Params *arg1 = (UTypes::Params *) 0 ;
  char **arg2 ;

  arg1 = *(UTypes::Params **)&_swig_go_0;
  arg2 = *(char ***)&_swig_go_1;

  {
    size_t ii;
    char * *b = (char * *) arg1->argv;
    for (ii = 0; ii < (size_t)UTypes::Params::max; ii++) b[ii] = *((char * *) arg2 + ii);
  }

}


_gostring_* _wrap_Params_argv_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::Params *_swig_go_0) {
  UTypes::Params *arg1 = (UTypes::Params *) 0 ;
  char **result = 0 ;
  _gostring_* _swig_go_result;

  arg1 = *(UTypes::Params **)&_swig_go_0;

  result = (char **)(char **) ((arg1)->argv);
  *(char ***)&_swig_go_result = result;
  return _swig_go_result;
}


UTypes::Params *_wrap_Params_inst_uniset_internal_api_576c1e11c33cb6aa() {
  UTypes::Params result;
  UTypes::Params *_swig_go_result;


  result = UTypes::Params::inst();
  *(UTypes::Params **)&_swig_go_result = new UTypes::Params(result);
  return _swig_go_result;
}


void _wrap_delete_Params_uniset_internal_api_576c1e11c33cb6aa(UTypes::Params *_swig_go_0) {
  UTypes::Params *arg1 = (UTypes::Params *) 0 ;

  arg1 = *(UTypes::Params **)&_swig_go_0;

  delete arg1;

}


void _wrap_ShortIOInfo_id_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0, long long _swig_go_1) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long arg2 ;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  if (arg1) (arg1)->id = arg2;

}


long long _wrap_ShortIOInfo_id_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long result;
  long long _swig_go_result;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;

  result = (long) ((arg1)->id);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ShortIOInfo_value_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0, long long _swig_go_1) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long arg2 ;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  if (arg1) (arg1)->value = arg2;

}


long long _wrap_ShortIOInfo_value_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long result;
  long long _swig_go_result;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;

  result = (long) ((arg1)->value);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ShortIOInfo_tv_sec_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0, long long _swig_go_1) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long arg2 ;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  if (arg1) (arg1)->tv_sec = arg2;

}


long long _wrap_ShortIOInfo_tv_sec_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long result;
  long long _swig_go_result;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;

  result = (long) ((arg1)->tv_sec);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ShortIOInfo_tv_nsec_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0, long long _swig_go_1) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long arg2 ;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  if (arg1) (arg1)->tv_nsec = arg2;

}


long long _wrap_ShortIOInfo_tv_nsec_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long result;
  long long _swig_go_result;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;

  result = (long) ((arg1)->tv_nsec);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ShortIOInfo_supplier_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0, long long _swig_go_1) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long arg2 ;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  if (arg1) (arg1)->supplier = arg2;

}


long long _wrap_ShortIOInfo_supplier_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long result;
  long long _swig_go_result;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;

  result = (long) ((arg1)->supplier);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ShortIOInfo_consumer_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0, long long _swig_go_1) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long arg2 ;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  if (arg1) (arg1)->consumer = arg2;

}


long long _wrap_ShortIOInfo_consumer_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long result;
  long long _swig_go_result;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;

  result = (long) ((arg1)->consumer);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ShortIOInfo_node_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0, long long _swig_go_1) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long arg2 ;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  if (arg1) (arg1)->node = arg2;

}


long long _wrap_ShortIOInfo_node_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;
  long result;
  long long _swig_go_result;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;

  result = (long) ((arg1)->node);
  _swig_go_result = result;
  return _swig_go_result;
}


UTypes::ShortIOInfo *_wrap_new_ShortIOInfo_uniset_internal_api_576c1e11c33cb6aa() {
  UTypes::ShortIOInfo *result = 0 ;
  UTypes::ShortIOInfo *_swig_go_result;


  result = (UTypes::ShortIOInfo *)new UTypes::ShortIOInfo();
  *(UTypes::ShortIOInfo **)&_swig_go_result = (UTypes::ShortIOInfo *)result;
  return _swig_go_result;
}


void _wrap_delete_ShortIOInfo_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0) {
  UTypes::ShortIOInfo *arg1 = (UTypes::ShortIOInfo *) 0 ;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;

  delete arg1;

}


void _wrap_ResultIO_sinfo_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultIO *_swig_go_0, UTypes::ShortIOInfo *_swig_go_1) {
  UTypes::ResultIO *arg1 = (UTypes::ResultIO *) 0 ;
  UTypes::ShortIOInfo *arg2 = (UTypes::ShortIOInfo *) 0 ;

  arg1 = *(UTypes::ResultIO **)&_swig_go_0;
  arg2 = *(UTypes::ShortIOInfo **)&_swig_go_1;

  if (arg1) (arg1)->sinfo = *arg2;

}


UTypes::ShortIOInfo *_wrap_ResultIO_sinfo_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultIO *_swig_go_0) {
  UTypes::ResultIO *arg1 = (UTypes::ResultIO *) 0 ;
  UTypes::ShortIOInfo *result = 0 ;
  UTypes::ShortIOInfo *_swig_go_result;

  arg1 = *(UTypes::ResultIO **)&_swig_go_0;

  result = (UTypes::ShortIOInfo *)& ((arg1)->sinfo);
  *(UTypes::ShortIOInfo **)&_swig_go_result = (UTypes::ShortIOInfo *)result;
  return _swig_go_result;
}


void _wrap_ResultIO_ok_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultIO *_swig_go_0, bool _swig_go_1) {
  UTypes::ResultIO *arg1 = (UTypes::ResultIO *) 0 ;
  bool arg2 ;

  arg1 = *(UTypes::ResultIO **)&_swig_go_0;
  arg2 = (bool)_swig_go_1;

  if (arg1) (arg1)->ok = arg2;

}


bool _wrap_ResultIO_ok_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultIO *_swig_go_0) {
  UTypes::ResultIO *arg1 = (UTypes::ResultIO *) 0 ;
  bool result;
  bool _swig_go_result;

  arg1 = *(UTypes::ResultIO **)&_swig_go_0;

  result = (bool) ((arg1)->ok);
  _swig_go_result = result;
  return _swig_go_result;
}


UTypes::ResultIO *_wrap_new_ResultIO__SWIG_0_uniset_internal_api_576c1e11c33cb6aa(UTypes::ShortIOInfo *_swig_go_0, bool _swig_go_1) {
  UTypes::ShortIOInfo *arg1 = 0 ;
  bool arg2 ;
  UTypes::ResultIO *result = 0 ;
  UTypes::ResultIO *_swig_go_result;

  arg1 = *(UTypes::ShortIOInfo **)&_swig_go_0;
  arg2 = (bool)_swig_go_1;

  result = (UTypes::ResultIO *)new UTypes::ResultIO((UTypes::ShortIOInfo const &)*arg1,arg2);
  *(UTypes::ResultIO **)&_swig_go_result = (UTypes::ResultIO *)result;
  return _swig_go_result;
}


UTypes::ResultIO *_wrap_new_ResultIO__SWIG_1_uniset_internal_api_576c1e11c33cb6aa() {
  UTypes::ResultIO *result = 0 ;
  UTypes::ResultIO *_swig_go_result;


  result = (UTypes::ResultIO *)new UTypes::ResultIO();
  *(UTypes::ResultIO **)&_swig_go_result = (UTypes::ResultIO *)result;
  return _swig_go_result;
}


void _wrap_delete_ResultIO_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultIO *_swig_go_0) {
  UTypes::ResultIO *arg1 = (UTypes::ResultIO *) 0 ;

  arg1 = *(UTypes::ResultIO **)&_swig_go_0;

  delete arg1;

}


void _wrap_ResultValue_value_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultValue *_swig_go_0, long long _swig_go_1) {
  UTypes::ResultValue *arg1 = (UTypes::ResultValue *) 0 ;
  long arg2 ;

  arg1 = *(UTypes::ResultValue **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  if (arg1) (arg1)->value = arg2;

}


long long _wrap_ResultValue_value_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultValue *_swig_go_0) {
  UTypes::ResultValue *arg1 = (UTypes::ResultValue *) 0 ;
  long result;
  long long _swig_go_result;

  arg1 = *(UTypes::ResultValue **)&_swig_go_0;

  result = (long) ((arg1)->value);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ResultValue_ok_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultValue *_swig_go_0, bool _swig_go_1) {
  UTypes::ResultValue *arg1 = (UTypes::ResultValue *) 0 ;
  bool arg2 ;

  arg1 = *(UTypes::ResultValue **)&_swig_go_0;
  arg2 = (bool)_swig_go_1;

  if (arg1) (arg1)->ok = arg2;

}


bool _wrap_ResultValue_ok_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultValue *_swig_go_0) {
  UTypes::ResultValue *arg1 = (UTypes::ResultValue *) 0 ;
  bool result;
  bool _swig_go_result;

  arg1 = *(UTypes::ResultValue **)&_swig_go_0;

  result = (bool) ((arg1)->ok);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ResultValue_err_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultValue *_swig_go_0, _gostring_ _swig_go_1) {
  UTypes::ResultValue *arg1 = (UTypes::ResultValue *) 0 ;
  std::string *arg2 = 0 ;

  arg1 = *(UTypes::ResultValue **)&_swig_go_0;

  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;


  if (arg1) (arg1)->err = *arg2;

}


_gostring_ _wrap_ResultValue_err_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultValue *_swig_go_0) {
  UTypes::ResultValue *arg1 = (UTypes::ResultValue *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;

  arg1 = *(UTypes::ResultValue **)&_swig_go_0;

  result = (std::string *) & ((arg1)->err);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length());
  return _swig_go_result;
}


UTypes::ResultValue *_wrap_new_ResultValue__SWIG_0_uniset_internal_api_576c1e11c33cb6aa(long long _swig_go_0, _gostring_ _swig_go_1) {
  long arg1 ;
  std::string *arg2 = 0 ;
  UTypes::ResultValue *result = 0 ;
  UTypes::ResultValue *_swig_go_result;

  arg1 = (long)_swig_go_0;

  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;


  result = (UTypes::ResultValue *)new UTypes::ResultValue(arg1,(std::string const &)*arg2);
  *(UTypes::ResultValue **)&_swig_go_result = (UTypes::ResultValue *)result;
  return _swig_go_result;
}


UTypes::ResultValue *_wrap_new_ResultValue__SWIG_1_uniset_internal_api_576c1e11c33cb6aa(long long _swig_go_0) {
  long arg1 ;
  UTypes::ResultValue *result = 0 ;
  UTypes::ResultValue *_swig_go_result;

  arg1 = (long)_swig_go_0;

  result = (UTypes::ResultValue *)new UTypes::ResultValue(arg1);
  *(UTypes::ResultValue **)&_swig_go_result = (UTypes::ResultValue *)result;
  return _swig_go_result;
}


UTypes::ResultValue *_wrap_new_ResultValue__SWIG_2_uniset_internal_api_576c1e11c33cb6aa() {
  UTypes::ResultValue *result = 0 ;
  UTypes::ResultValue *_swig_go_result;


  result = (UTypes::ResultValue *)new UTypes::ResultValue();
  *(UTypes::ResultValue **)&_swig_go_result = (UTypes::ResultValue *)result;
  return _swig_go_result;
}


UTypes::ResultValue *_wrap_new_ResultValue__SWIG_3_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultValue *_swig_go_0) {
  UTypes::ResultValue *arg1 = 0 ;
  UTypes::ResultValue *result = 0 ;
  UTypes::ResultValue *_swig_go_result;

  arg1 = *(UTypes::ResultValue **)&_swig_go_0;

  result = (UTypes::ResultValue *)new UTypes::ResultValue((UTypes::ResultValue &&)*arg1);
  *(UTypes::ResultValue **)&_swig_go_result = (UTypes::ResultValue *)result;
  return _swig_go_result;
}


UTypes::ResultValue *_wrap_new_ResultValue__SWIG_4_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultValue *_swig_go_0) {
  UTypes::ResultValue *arg1 = 0 ;
  UTypes::ResultValue *result = 0 ;
  UTypes::ResultValue *_swig_go_result;

  arg1 = *(UTypes::ResultValue **)&_swig_go_0;

  result = (UTypes::ResultValue *)new UTypes::ResultValue((UTypes::ResultValue const &)*arg1);
  *(UTypes::ResultValue **)&_swig_go_result = (UTypes::ResultValue *)result;
  return _swig_go_result;
}


void _wrap_delete_ResultValue_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultValue *_swig_go_0) {
  UTypes::ResultValue *arg1 = (UTypes::ResultValue *) 0 ;

  arg1 = *(UTypes::ResultValue **)&_swig_go_0;

  delete arg1;

}


void _wrap_ResultBool_result_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultBool *_swig_go_0, bool _swig_go_1) {
  UTypes::ResultBool *arg1 = (UTypes::ResultBool *) 0 ;
  bool arg2 ;

  arg1 = *(UTypes::ResultBool **)&_swig_go_0;
  arg2 = (bool)_swig_go_1;

  if (arg1) (arg1)->result = arg2;

}


bool _wrap_ResultBool_result_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultBool *_swig_go_0) {
  UTypes::ResultBool *arg1 = (UTypes::ResultBool *) 0 ;
  bool result;
  bool _swig_go_result;

  arg1 = *(UTypes::ResultBool **)&_swig_go_0;

  result = (bool) ((arg1)->result);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ResultBool_ok_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultBool *_swig_go_0, bool _swig_go_1) {
  UTypes::ResultBool *arg1 = (UTypes::ResultBool *) 0 ;
  bool arg2 ;

  arg1 = *(UTypes::ResultBool **)&_swig_go_0;
  arg2 = (bool)_swig_go_1;

  if (arg1) (arg1)->ok = arg2;

}


bool _wrap_ResultBool_ok_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultBool *_swig_go_0) {
  UTypes::ResultBool *arg1 = (UTypes::ResultBool *) 0 ;
  bool result;
  bool _swig_go_result;

  arg1 = *(UTypes::ResultBool **)&_swig_go_0;

  result = (bool) ((arg1)->ok);
  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_ResultBool_err_set_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultBool *_swig_go_0, _gostring_ _swig_go_1) {
  UTypes::ResultBool *arg1 = (UTypes::ResultBool *) 0 ;
  std::string *arg2 = 0 ;

  arg1 = *(UTypes::ResultBool **)&_swig_go_0;

  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;


  if (arg1) (arg1)->err = *arg2;

}


_gostring_ _wrap_ResultBool_err_get_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultBool *_swig_go_0) {
  UTypes::ResultBool *arg1 = (UTypes::ResultBool *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;

  arg1 = *(UTypes::ResultBool **)&_swig_go_0;

  result = (std::string *) & ((arg1)->err);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length());
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_new_ResultBool__SWIG_0_uniset_internal_api_576c1e11c33cb6aa(bool _swig_go_0, _gostring_ _swig_go_1) {
  bool arg1 ;
  std::string *arg2 = 0 ;
  UTypes::ResultBool *result = 0 ;
  UTypes::ResultBool *_swig_go_result;

  arg1 = (bool)_swig_go_0;

  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;


  result = (UTypes::ResultBool *)new UTypes::ResultBool(arg1,(std::string const &)*arg2);
  *(UTypes::ResultBool **)&_swig_go_result = (UTypes::ResultBool *)result;
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_new_ResultBool__SWIG_1_uniset_internal_api_576c1e11c33cb6aa(bool _swig_go_0) {
  bool arg1 ;
  UTypes::ResultBool *result = 0 ;
  UTypes::ResultBool *_swig_go_result;

  arg1 = (bool)_swig_go_0;

  result = (UTypes::ResultBool *)new UTypes::ResultBool(arg1);
  *(UTypes::ResultBool **)&_swig_go_result = (UTypes::ResultBool *)result;
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_new_ResultBool__SWIG_2_uniset_internal_api_576c1e11c33cb6aa() {
  UTypes::ResultBool *result = 0 ;
  UTypes::ResultBool *_swig_go_result;


  result = (UTypes::ResultBool *)new UTypes::ResultBool();
  *(UTypes::ResultBool **)&_swig_go_result = (UTypes::ResultBool *)result;
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_new_ResultBool__SWIG_3_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultBool *_swig_go_0) {
  UTypes::ResultBool *arg1 = 0 ;
  UTypes::ResultBool *result = 0 ;
  UTypes::ResultBool *_swig_go_result;

  arg1 = *(UTypes::ResultBool **)&_swig_go_0;

  result = (UTypes::ResultBool *)new UTypes::ResultBool((UTypes::ResultBool &&)*arg1);
  *(UTypes::ResultBool **)&_swig_go_result = (UTypes::ResultBool *)result;
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_new_ResultBool__SWIG_4_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultBool *_swig_go_0) {
  UTypes::ResultBool *arg1 = 0 ;
  UTypes::ResultBool *result = 0 ;
  UTypes::ResultBool *_swig_go_result;

  arg1 = *(UTypes::ResultBool **)&_swig_go_0;

  result = (UTypes::ResultBool *)new UTypes::ResultBool((UTypes::ResultBool const &)*arg1);
  *(UTypes::ResultBool **)&_swig_go_result = (UTypes::ResultBool *)result;
  return _swig_go_result;
}


void _wrap_delete_ResultBool_uniset_internal_api_576c1e11c33cb6aa(UTypes::ResultBool *_swig_go_0) {
  UTypes::ResultBool *arg1 = (UTypes::ResultBool *) 0 ;

  arg1 = *(UTypes::ResultBool **)&_swig_go_0;

  delete arg1;

}


UException *_wrap_new_UException__SWIG_0_uniset_internal_api_576c1e11c33cb6aa() {
  UException *result = 0 ;
  UException *_swig_go_result;


  result = (UException *)new UException();
  *(UException **)&_swig_go_result = (UException *)result;
  return _swig_go_result;
}


UException *_wrap_new_UException__SWIG_1_uniset_internal_api_576c1e11c33cb6aa(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  UException *result = 0 ;
  UException *_swig_go_result;


  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;


  result = (UException *)new UException((std::string const &)*arg1);
  *(UException **)&_swig_go_result = (UException *)result;
  return _swig_go_result;
}


UException *_wrap_new_UException__SWIG_2_uniset_internal_api_576c1e11c33cb6aa(_gostring_ _swig_go_0) {
  char *arg1 = (char *) 0 ;
  UException *result = 0 ;
  UException *_swig_go_result;

  arg1 = (char *)_swig_go_0.p;

  result = (UException *)new UException((char const *)arg1);
  *(UException **)&_swig_go_result = (UException *)result;
  return _swig_go_result;
}


void _wrap_delete_UException_uniset_internal_api_576c1e11c33cb6aa(UException *_swig_go_0) {
  UException *arg1 = (UException *) 0 ;

  arg1 = *(UException **)&_swig_go_0;

  delete arg1;

}


_gostring_ _wrap_UException_getError_uniset_internal_api_576c1e11c33cb6aa(UException *_swig_go_0) {
  UException *arg1 = (UException *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;

  arg1 = *(UException **)&_swig_go_0;

  result = (arg1)->getError();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length());
  return _swig_go_result;
}


void _wrap_UException_err_set_uniset_internal_api_576c1e11c33cb6aa(UException *_swig_go_0, _gostring_ _swig_go_1) {
  UException *arg1 = (UException *) 0 ;
  std::string *arg2 = 0 ;

  arg1 = *(UException **)&_swig_go_0;

  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;


  if (arg1) (arg1)->err = *arg2;

}


_gostring_ _wrap_UException_err_get_uniset_internal_api_576c1e11c33cb6aa(UException *_swig_go_0) {
  UException *arg1 = (UException *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;

  arg1 = *(UException **)&_swig_go_0;

  result = (std::string *) & ((arg1)->err);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length());
  return _swig_go_result;
}


UTimeOut *_wrap_new_UTimeOut__SWIG_0_uniset_internal_api_576c1e11c33cb6aa() {
  UTimeOut *result = 0 ;
  UTimeOut *_swig_go_result;


  result = (UTimeOut *)new UTimeOut();
  *(UTimeOut **)&_swig_go_result = (UTimeOut *)result;
  return _swig_go_result;
}


UTimeOut *_wrap_new_UTimeOut__SWIG_1_uniset_internal_api_576c1e11c33cb6aa(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  UTimeOut *result = 0 ;
  UTimeOut *_swig_go_result;


  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;


  result = (UTimeOut *)new UTimeOut((std::string const &)*arg1);
  *(UTimeOut **)&_swig_go_result = (UTimeOut *)result;
  return _swig_go_result;
}


void _wrap_delete_UTimeOut_uniset_internal_api_576c1e11c33cb6aa(UTimeOut *_swig_go_0) {
  UTimeOut *arg1 = (UTimeOut *) 0 ;

  arg1 = *(UTimeOut **)&_swig_go_0;

  delete arg1;

}


_gostring_ _wrap_UTimeOut_getError_uniset_internal_api_576c1e11c33cb6aa(UTimeOut *_swig_go_0) {
  UTimeOut *arg1 = (UTimeOut *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;

  arg1 = *(UTimeOut **)&_swig_go_0;

  UException *swig_b0 = (UException *)arg1;
  result = (swig_b0)->getError();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length());
  return _swig_go_result;
}


void _wrap_SetUTimeOut_Err_uniset_internal_api_576c1e11c33cb6aa(UTimeOut *_swig_go_0, _gostring_ _swig_go_1) {
  UTimeOut *arg1 = (UTimeOut *) 0 ;
  std::string *arg2 = 0 ;

  arg1 = *(UTimeOut **)&_swig_go_0;

  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;


  UException *swig_b0 = (UException *)arg1;
  if (swig_b0) (swig_b0)->err = *arg2;

}


_gostring_ _wrap_GetUTimeOut_Err_uniset_internal_api_576c1e11c33cb6aa(UTimeOut *_swig_go_0) {
  UTimeOut *arg1 = (UTimeOut *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;

  arg1 = *(UTimeOut **)&_swig_go_0;

  UException *swig_b0 = (UException *)arg1;
  result = (std::string *) & ((swig_b0)->err);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length());
  return _swig_go_result;
}


USysError *_wrap_new_USysError__SWIG_0_uniset_internal_api_576c1e11c33cb6aa() {
  USysError *result = 0 ;
  USysError *_swig_go_result;


  result = (USysError *)new USysError();
  *(USysError **)&_swig_go_result = (USysError *)result;
  return _swig_go_result;
}


USysError *_wrap_new_USysError__SWIG_1_uniset_internal_api_576c1e11c33cb6aa(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  USysError *result = 0 ;
  USysError *_swig_go_result;


  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;


  result = (USysError *)new USysError((std::string const &)*arg1);
  *(USysError **)&_swig_go_result = (USysError *)result;
  return _swig_go_result;
}


void _wrap_delete_USysError_uniset_internal_api_576c1e11c33cb6aa(USysError *_swig_go_0) {
  USysError *arg1 = (USysError *) 0 ;

  arg1 = *(USysError **)&_swig_go_0;

  delete arg1;

}


_gostring_ _wrap_USysError_getError_uniset_internal_api_576c1e11c33cb6aa(USysError *_swig_go_0) {
  USysError *arg1 = (USysError *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;

  arg1 = *(USysError **)&_swig_go_0;

  UException *swig_b0 = (UException *)arg1;
  result = (swig_b0)->getError();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length());
  return _swig_go_result;
}


void _wrap_SetUSysError_Err_uniset_internal_api_576c1e11c33cb6aa(USysError *_swig_go_0, _gostring_ _swig_go_1) {
  USysError *arg1 = (USysError *) 0 ;
  std::string *arg2 = 0 ;

  arg1 = *(USysError **)&_swig_go_0;

  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;


  UException *swig_b0 = (UException *)arg1;
  if (swig_b0) (swig_b0)->err = *arg2;

}


_gostring_ _wrap_GetUSysError_Err_uniset_internal_api_576c1e11c33cb6aa(USysError *_swig_go_0) {
  USysError *arg1 = (USysError *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;

  arg1 = *(USysError **)&_swig_go_0;

  UException *swig_b0 = (UException *)arg1;
  result = (std::string *) & ((swig_b0)->err);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length());
  return _swig_go_result;
}


UValidateError *_wrap_new_UValidateError__SWIG_0_uniset_internal_api_576c1e11c33cb6aa() {
  UValidateError *result = 0 ;
  UValidateError *_swig_go_result;


  result = (UValidateError *)new UValidateError();
  *(UValidateError **)&_swig_go_result = (UValidateError *)result;
  return _swig_go_result;
}


UValidateError *_wrap_new_UValidateError__SWIG_1_uniset_internal_api_576c1e11c33cb6aa(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  UValidateError *result = 0 ;
  UValidateError *_swig_go_result;


  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;


  result = (UValidateError *)new UValidateError((std::string const &)*arg1);
  *(UValidateError **)&_swig_go_result = (UValidateError *)result;
  return _swig_go_result;
}


void _wrap_delete_UValidateError_uniset_internal_api_576c1e11c33cb6aa(UValidateError *_swig_go_0) {
  UValidateError *arg1 = (UValidateError *) 0 ;

  arg1 = *(UValidateError **)&_swig_go_0;

  delete arg1;

}


_gostring_ _wrap_UValidateError_getError_uniset_internal_api_576c1e11c33cb6aa(UValidateError *_swig_go_0) {
  UValidateError *arg1 = (UValidateError *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;

  arg1 = *(UValidateError **)&_swig_go_0;

  UException *swig_b0 = (UException *)arg1;
  result = (swig_b0)->getError();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length());
  return _swig_go_result;
}


void _wrap_SetUValidateError_Err_uniset_internal_api_576c1e11c33cb6aa(UValidateError *_swig_go_0, _gostring_ _swig_go_1) {
  UValidateError *arg1 = (UValidateError *) 0 ;
  std::string *arg2 = 0 ;

  arg1 = *(UValidateError **)&_swig_go_0;

  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;


  UException *swig_b0 = (UException *)arg1;
  if (swig_b0) (swig_b0)->err = *arg2;

}


_gostring_ _wrap_GetUValidateError_Err_uniset_internal_api_576c1e11c33cb6aa(UValidateError *_swig_go_0) {
  UValidateError *arg1 = (UValidateError *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;

  arg1 = *(UValidateError **)&_swig_go_0;

  UException *swig_b0 = (UException *)arg1;
  result = (std::string *) & ((swig_b0)->err);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length());
  return _swig_go_result;
}


UProxy *_wrap_new_UProxy__SWIG_0_uniset_internal_api_576c1e11c33cb6aa(_gostring_ _swig_go_0) {
  std::string *arg1 = 0 ;
  UProxy *result = 0 ;
  UProxy *_swig_go_result;


  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;


  try {
    result = (UProxy *)new UProxy((std::string const &)*arg1);
  }
  catch(UException &_e) {
    (void)_e;
    _swig_gopanic("C++ UException exception thrown");

  }

  *(UProxy **)&_swig_go_result = (UProxy *)result;
  return _swig_go_result;
}


UProxy *_wrap_new_UProxy__SWIG_1_uniset_internal_api_576c1e11c33cb6aa(long long _swig_go_0) {
  long arg1 ;
  UProxy *result = 0 ;
  UProxy *_swig_go_result;

  arg1 = (long)_swig_go_0;

  try {
    result = (UProxy *)new UProxy(arg1);
  }
  catch(UException &_e) {
    (void)_e;
    _swig_gopanic("C++ UException exception thrown");

  }

  *(UProxy **)&_swig_go_result = (UProxy *)result;
  return _swig_go_result;
}


void _wrap_delete_UProxy_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0) {
  UProxy *arg1 = (UProxy *) 0 ;

  arg1 = *(UProxy **)&_swig_go_0;

  delete arg1;

}


void _wrap_UProxy_askSensor_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0, long long _swig_go_1) {
  UProxy *arg1 = (UProxy *) 0 ;
  long arg2 ;

  arg1 = *(UProxy **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  try {
    (arg1)->askSensor(arg2);
  }
  catch(UException &_e) {
    (void)_e;
    _swig_gopanic("C++ UException exception thrown");

  }


}


long long _wrap_UProxy_getValue_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0, long long _swig_go_1) {
  UProxy *arg1 = (UProxy *) 0 ;
  long arg2 ;
  long result;
  long long _swig_go_result;

  arg1 = *(UProxy **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  try {
    result = (long)(arg1)->getValue(arg2);
  }
  catch(UException &_e) {
    (void)_e;
    _swig_gopanic("C++ UException exception thrown");

  }

  _swig_go_result = result;
  return _swig_go_result;
}


void _wrap_UProxy_setValue_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  UProxy *arg1 = (UProxy *) 0 ;
  long arg2 ;
  long arg3 ;

  arg1 = *(UProxy **)&_swig_go_0;
  arg2 = (long)_swig_go_1;
  arg3 = (long)_swig_go_2;

  try {
    (arg1)->setValue(arg2,arg3);
  }
  catch(UException &_e) {
    (void)_e;
    _swig_gopanic("C++ UException exception thrown");

  }


}


UTypes::ShortIOInfo *_wrap_UProxy_waitMessage_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0, long long _swig_go_1) {
  UProxy *arg1 = (UProxy *) 0 ;
  unsigned long arg2 ;
  UTypes::ShortIOInfo result;
  UTypes::ShortIOInfo *_swig_go_result;

  arg1 = *(UProxy **)&_swig_go_0;
  arg2 = (unsigned long)_swig_go_1;

  try {
    result = (arg1)->waitMessage(arg2);
  }
  catch(UException &_e) {
    (void)_e;
    _swig_gopanic("C++ UException exception thrown");

  }

  *(UTypes::ShortIOInfo **)&_swig_go_result = new UTypes::ShortIOInfo(result);
  return _swig_go_result;
}


UTypes::ResultIO *_wrap_UProxy_safeWaitMessage_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0, long long _swig_go_1) {
  UProxy *arg1 = (UProxy *) 0 ;
  unsigned long arg2 ;
  UTypes::ResultIO result;
  UTypes::ResultIO *_swig_go_result;

  arg1 = *(UProxy **)&_swig_go_0;
  arg2 = (unsigned long)_swig_go_1;

  result = (arg1)->safeWaitMessage(arg2);
  *(UTypes::ResultIO **)&_swig_go_result = new UTypes::ResultIO(result);
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_UProxy_safeSetValue_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0, long long _swig_go_1, long long _swig_go_2) {
  UProxy *arg1 = (UProxy *) 0 ;
  long arg2 ;
  long arg3 ;
  UTypes::ResultBool result;
  UTypes::ResultBool *_swig_go_result;

  arg1 = *(UProxy **)&_swig_go_0;
  arg2 = (long)_swig_go_1;
  arg3 = (long)_swig_go_2;

  result = (arg1)->safeSetValue(arg2,arg3);
  *(UTypes::ResultBool **)&_swig_go_result = new UTypes::ResultBool(result);
  return _swig_go_result;
}


UTypes::ResultValue *_wrap_UProxy_safeGetValue_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0, long long _swig_go_1) {
  UProxy *arg1 = (UProxy *) 0 ;
  long arg2 ;
  UTypes::ResultValue result;
  UTypes::ResultValue *_swig_go_result;

  arg1 = *(UProxy **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  result = (arg1)->safeGetValue(arg2);
  *(UTypes::ResultValue **)&_swig_go_result = new UTypes::ResultValue(result);
  return _swig_go_result;
}


UTypes::ResultBool *_wrap_UProxy_safeAskSensor_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0, long long _swig_go_1) {
  UProxy *arg1 = (UProxy *) 0 ;
  long arg2 ;
  UTypes::ResultBool result;
  UTypes::ResultBool *_swig_go_result;

  arg1 = *(UProxy **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  result = (arg1)->safeAskSensor(arg2);
  *(UTypes::ResultBool **)&_swig_go_result = new UTypes::ResultBool(result);
  return _swig_go_result;
}


bool _wrap_UProxy_isExist_uniset_internal_api_576c1e11c33cb6aa(UProxy *_swig_go_0, long long _swig_go_1) {
  UProxy *arg1 = (UProxy *) 0 ;
  long arg2 ;
  bool result;
  bool _swig_go_result;

  arg1 = *(UProxy **)&_swig_go_0;
  arg2 = (long)_swig_go_1;

  result = (bool)(arg1)->isExist(arg2);
  _swig_go_result = result;
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif
